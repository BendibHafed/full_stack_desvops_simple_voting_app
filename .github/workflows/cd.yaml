name: CD

on: 
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read # Allows to pull Docker image from GHCR

    steps:
      # 1. Checkout the repos
      - name: Checkout Repo
        uses: actions/checkout@v4

      # 2. Configure AWS credentials (GitHub Actions)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Test AWS credentials
        run: aws sts get-caller-identity

       # 3. Ensure Terraform Backend Exists
      - name: Ensure Terraform Backend Exists
        run: |
          BUCKET="my-terraform-state-bucket-he1"
          REGION=${{ secrets.AWS_REGION }}
          DYNAMO_TABLE="terraform-locks"

          if ! aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
            aws s3api create-bucket \
              --bucket "$BUCKET" \
              --region "$REGION" \
              --create-bucket-configuration LocationConstraint="$REGION" || true
            aws s3api put-bucket-encryption \
              --bucket "$BUCKET" \
              --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}' || true
          fi

          if ! aws dynamodb describe-table --table-name "$DYNAMO_TABLE" >/dev/null 2>&1; then
            aws dynamodb create-table \
              --table-name "$DYNAMO_TABLE" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --billing-mode PAY_PER_REQUEST \
              --region "$REGION"
          fi

      # 4. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.0

      # 5. Terraform Init
      - name: Terraform Init
        working-directory: infra/terraform
        run: terraform init -input=false
      
      # 6. Terraform Plan
      - name: Terraform plan
        working-directory: infra/terraform
        run: terraform plan -input=false -out=tfplan

      # 7. Terraform Apply
      #- name: Terraform apply
      #  working-directory: infra/terraform
      #  run: terraform apply -input=fase -auto-approve tfplan

      # 8. Install Ansible and Plugins
      - name: Install Ansible + plugins
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible python3-boto3 python3-botocore
